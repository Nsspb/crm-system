{"ast":null,"code":"var _jsxFileName = \"/home/boss/Desktop/crm/social/client/src/components/footer/Footer.jsx\",\n    _s = $RefreshSig$();\n\nimport './footer.css';\nimport { useContext, useEffect, useState } from \"react\";\nimport Share from '../share/Share';\nimport Post from '../post/Post';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed({\n  username\n}) {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = username ? await axios.get(\"/posts/profile/\" + username) : await axios.get(\"posts/timeline/\" + user._id);\n      setPosts(res.data.sort((p1, p2) => {\n        return new Date(p2.createdAt) - new Date(p1.createdAt);\n      }));\n    };\n\n    fetchPosts();\n  }, [username, user._id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"footer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedWrapper\",\n      children: [(!username || username === user.username) && /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 57\n      }, this), posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n        post: p\n      }, p._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Feed, \"omHF6PJyNAaQxhbtLbXyaS78q/s=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/home/boss/Desktop/crm/social/client/src/components/footer/Footer.jsx"],"names":["useContext","useEffect","useState","Share","Post","AuthContext","axios","Feed","username","posts","setPosts","user","fetchPosts","res","get","_id","data","sort","p1","p2","Date","createdAt","map","p"],"mappings":";;;AAAA,OAAO,cAAP;AACA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAmB,gBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA4B;AAAA;;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWX,UAAU,CAACK,WAAD,CAA3B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAGL,QAAQ,GAChB,MAAMF,KAAK,CAACQ,GAAN,CAAU,oBAAoBN,QAA9B,CADU,GAEhB,MAAMF,KAAK,CAACQ,GAAN,CAAU,oBAAoBH,IAAI,CAACI,GAAnC,CAFV;AAGAL,MAAAA,QAAQ,CACNG,GAAG,CAACG,IAAJ,CAASC,IAAT,CAAc,CAACC,EAAD,EAAKC,EAAL,KAAY;AACxB,eAAO,IAAIC,IAAJ,CAASD,EAAE,CAACE,SAAZ,IAAyB,IAAID,IAAJ,CAASF,EAAE,CAACG,SAAZ,CAAhC;AACD,OAFD,CADM,CAAR;AAKD,KATD;;AAUAT,IAAAA,UAAU;AACX,GAZQ,EAYN,CAACJ,QAAD,EAAWG,IAAI,CAACI,GAAhB,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACG,CAAC,CAACP,QAAD,IAAaA,QAAQ,KAAKG,IAAI,CAACH,QAAhC,kBAA6C,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADhD,EAEGC,KAAK,CAACa,GAAN,CAAWC,CAAD,iBACT,QAAC,IAAD;AAAkB,QAAA,IAAI,EAAEA;AAAxB,SAAWA,CAAC,CAACR,GAAb;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA5BqBR,I;;KAAAA,I","sourcesContent":["import './footer.css'\nimport { useContext, useEffect, useState } from \"react\";\nimport Share  from '../share/Share'\nimport Post from '../post/Post'\nimport { AuthContext } from \"../../context/AuthContext\";\n\n\nimport axios from \"axios\"\n\n\n\nexport default function Feed({ username }) {\n    const [posts, setPosts] = useState([]);\n    const { user } = useContext(AuthContext);\n  \n    useEffect(() => {\n      const fetchPosts = async () => {\n        const res = username\n          ? await axios.get(\"/posts/profile/\" + username)\n          : await axios.get(\"posts/timeline/\" + user._id);\n        setPosts(\n          res.data.sort((p1, p2) => {\n            return new Date(p2.createdAt) - new Date(p1.createdAt);\n          })\n        );\n      };\n      fetchPosts();\n    }, [username, user._id]);\n  \n    return (\n      <div className=\"footer\">\n        <div className=\"feedWrapper\">\n          {(!username || username === user.username) && <Share />}\n          {posts.map((p) => (\n            <Post key={p._id} post={p} />\n          ))}\n        </div>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}